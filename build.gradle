buildscript {
    configurations.classpath {
        resolutionStrategy.activateDependencyLocking()
    }
}

plugins {
    id 'java'
    id 'groovy'
    id 'java-gradle-plugin'
    id 'jacoco'
    id 'pmd'
    alias(libs.plugins.gradle.plugin.publish)
    alias(libs.plugins.shadow)
    alias(libs.plugins.snyk)
}

ext {
    pluginDescription = 'The plugin that allows you access to git commands inside gradle as task'
}

configurations {
    plugin
    implementation.extendsFrom(plugin)

    mockitoAgent

    [apiElements, runtimeElements].each {
        it.outgoing.artifacts.removeIf { it.buildDependencies.getDependencies(null).contains(jar) }
        it.outgoing.artifact(shadowJar)
    }
}

shadowJar {
    configurations = [project.configurations.plugin]
    archiveClassifier.set("")
    relocate 'xyz.ronella.trivial', "${project.group}.shadow.trivial"
    minimize()
}

gradlePlugin {
    plugins {
        website = 'https://github.com/rcw3bb/simple-git'
        vcsUrl = 'https://github.com/rcw3bb/simple-git'
        description = pluginDescription
        simpleGit {
            id = 'xyz.ronella.simple-git'
            displayName = 'Simple Git Plugin'
            description = pluginDescription
            implementationClass = 'xyz.ronella.gradle.plugin.simple.git.SimpleGitPlugin'
        }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

pmd {
    consoleOutput = true
    toolVersion = "7.7.0"
    rulesMinimumPriority = 5
    ruleSetFiles = files('quality/pmd/java/custom.xml')
    ruleSets = []
}

pmdTest.enabled = false

snyk {
    arguments = '--all-sub-projects'
    severity = 'low'
    api = "${snykToken}"
    autoDownload = true
    autoUpdate = true
}

repositories {
    mavenCentral()
}

dependencyLocking {
    lockAllConfigurations()
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()

    plugin libs.trivial.chunk

    testImplementation testLibs.bundles.unit.test
    mockitoAgent(testLibs.mockito.core) {
        transitive = false
    }
}

test {
    jvmArgs("-javaagent:${configurations.mockitoAgent.asPath}")
    useJUnitPlatform()
    dependsOn pmdMain
    finalizedBy(jacocoTestReport)
    finalizedBy('snyk-test')
}

jar {
    enabled = false
    dependsOn test, shadowJar
    dependsOn('snyk-monitor')
}

shadowJar.mustRunAfter(test)